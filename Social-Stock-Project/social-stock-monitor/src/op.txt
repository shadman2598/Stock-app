App.js```
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import StockDetails from './components/StockDetails';
import Watchlist from './components/Watchlist';
import Portfolio from './components/Portfolio';
import Chat from './components/Chat';
import './App.css';

const CometChat = window.CometChat;
const AppSettingsBuilder = CometChat.AppSettingsBuilder;

const appID = process.env.REACT_APP_APP_ID;
const region = process.env.REACT_APP_REGION;
const appSetting = new AppSettingsBuilder().subscribePresenceForAllUsers().setRegion(region).build();

CometChat.init(appID, appSetting).then(
  () => {
    console.log("Initialization completed successfully");
    // You can now call login function.
  },
  error => {
    console.log("Initialization failed with error:", error);
    // Check the reason for error and take appropriate action.
  }
);

const uid = "superhero1"; // replace with your user id
const apiKey = process.env.REACT_APP_API_KEY;

CometChat.login(uid, apiKey).then(
  User => {
    console.log("Login Successful:", { User });
  },
  error => {
    console.log("Login failed with exception:", { error });
  }
);

function App() {
  return (
    <Router>
      <Switch>
        <Route path="/stock/:id" component={StockDetails} />
        <Route path="/watchlist" component={Watchlist} />
        <Route path="/portfolio" component={Portfolio} />
        <Route path="/chat" component={Chat} />
        <Route path="/" component={Home} />
      </Switch>
    </Router>
  );
}

export default App;

```
App.test.js```
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

```
index.js```
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

```
reportWebVitals.js```
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

```
setupTests.js```
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

```
components\Chat.js```

```
components\StockDetials.js```
import React from 'react';

function StockDetails() {
  // Fetch and display stock details here
    return (
        <div>
        <h2>Stock Details</h2>
        </div>
    );
}

export default StockDetails;
```
